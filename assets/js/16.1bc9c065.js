(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{439:function(t,e,i){t.exports=i.p+"assets/img/offsetXXX.69f558ed.jpg"},464:function(t,e,i){"use strict";i.r(e);var s=i(2),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_2021-11-08"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2021-11-08"}},[t._v("#")]),t._v(" 2021.11.08")]),t._v(" "),s("h3",{attrs:{id:"关于元素属性offsetheight、scrollheight、clientheight"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于元素属性offsetheight、scrollheight、clientheight"}},[t._v("#")]),t._v(" 关于元素属性offsetHeight、ScrollHeight、clientHeight")]),t._v(" "),s("p",[t._v("相关链接：https://juejin.cn/post/6844904110198636557")]),t._v(" "),s("p",[t._v("有关属性：")]),t._v(" "),s("ul",[s("li",[t._v("offsetHeight / offsetWidth / offsetTop")]),t._v(" "),s("li",[t._v("clientWidth / clientHeight")]),t._v(" "),s("li",[t._v("scrollWidth / scrollHeight / scrollTop")])]),t._v(" "),s("h4",{attrs:{id:"offsetxxx-border-padding-content-滚动条"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offsetxxx-border-padding-content-滚动条"}},[t._v("#")]),t._v(" offsetXXX (border + padding + content + 滚动条）")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:i(439),alt:"offsetXXX"}}),t._v(" "),s("p",[t._v("offsetHeight / offsetWidth 指的是一个元素的CSS【标准高宽】， 包含了边框、内边距、元素内容以及滚动条（如果存在且渲染的话），不包含 :before 或 :after 等伪类元素的高度。")]),t._v(" "),s("p",[t._v("offsetXXX其实就是元素在页面中的实际占用空间，同时当元素的形状发生变化时，offsetWidth就表示布局的宽，并不代表实际渲染出来的宽高，如需获取选的宽高清使用   "),s("strong",[t._v("getBoundingClientRect()")]),t._v("   方法获取到真正的offsetWidth")]),t._v(" "),s("h4",{attrs:{id:"clientxxx-padding-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clientxxx-padding-content"}},[t._v("#")]),t._v(" clientXXX （ padding + content）")]),t._v(" "),s("p",[t._v("clientHeight / clientWidth 就表示一个元素的【内容高宽】，这个属性是只读属性，对于没有定义CSS或者内联布局盒子的元素为0，否则，它是元素内部的高度(单位像素)，包含内边距，但不包括水平滚动条、边框和外边距。")]),t._v(" "),s("p",[t._v("clientHeight 可以通过   height + padding - 水平滚动条高度（如果存在的话）")]),t._v(" "),s("h4",{attrs:{id:"scrollxxx-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scrollxxx-content"}},[t._v("#")]),t._v(" scrollXXX （content）")]),t._v(" "),s("p",[s("strong",[t._v("scrollWidth / scrollHeight 表示一个元素内容的实际大小，包括不在页面中的可滚动内容（内容和内边距）")]),t._v("，他是clientXXX的增强版，是整个内容大小，scrollHeight包括 ::before 和 ::after 伪元素")]),t._v(" "),s("h4",{attrs:{id:"xxxtop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xxxtop"}},[t._v("#")]),t._v(" xxxTop")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("offsetTop是当前元素顶部距离最近父元素顶部的距离，与有没有滚动条没有关系")])]),t._v(" "),s("li",[s("p",[t._v("scrollTop可以获取一个元素在垂直滚动的像素，在有滚动条的情况下，为元素可视区域距离元素顶部的像素，也就是已经滚动了多少距离")])]),t._v(" "),s("li",[s("p",[t._v("clientTop 一个元素顶部边框的宽度（不包括顶部外边距或内边距）")])])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),s("ul",[s("li",[t._v("offsetXXX 是  clientXXX + 外边框 + 滚动条（有的话）")]),t._v(" "),s("li",[t._v("scrollXXX  是  clientXXX + 隐藏区域大小（如果有滚动的话）")])]),t._v(" "),s("h3",{attrs:{id:"innerheight-innerwidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innerheight-innerwidth"}},[t._v("#")]),t._v(" innerHeight innerWidth")]),t._v(" "),s("p",[t._v("只读属性，视口的尺寸，包括滚动条")]),t._v(" "),s("h3",{attrs:{id:"getboundingclientrect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getboundingclientrect"}},[t._v("#")]),t._v(" getBoundingClientRect()")]),t._v(" "),s("p",[t._v("只读，返回浮点值，常用于确定元素相对于视口的位置，该方法返回一个DOMRect对象，包含left right top bottom width height六个属性，其中")]),t._v(" "),s("p",[t._v("left right top bottom 都是元素相对于视口原点的距离")]),t._v(" "),s("p",[t._v("height width 元素的尺寸，包括被滚动隐藏的部分，padding和border参与计算，height = bottom - top")]),t._v(" "),s("p",[t._v("width = right - left")])])}),[],!1,null,null,null);e.default=r.exports}}]);